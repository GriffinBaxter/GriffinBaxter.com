[
  {
    "innerHtml": "GitHub Repository: <a href=\"https://github.com/GriffinBaxter/GreenFlights\" rel=\"noreferrer noopener\">GitHub.com/GriffinBaxter/GreenFlights</a>",
    "tagName": "p"
  },
  {
    "innerHtml": "This flight tracking application, GreenFlights, was created in Java with a team of four other students for one of my University courses, <a href=\"https://www.canterbury.ac.nz/courseinfo/GetCourseDetails.aspx?course=SENG202&occurrence=20S2(C)&year=2020\" rel=\"noreferrer noopener\">SENG 202 (Software Engineering Project Workshop)</a>, during Semester 2 of 2020. I received a B+ grade for the course.",
    "tagName": "p"
  },
  {
    "innerHtml": "This application makes use of an SQL database (SQLite) for storing, filtering and sorting data. The application is based around offsetting and reducing carbon emissions on series of flights.",
    "tagName": "p"
  },
  {
    "innerHtml": "The airline, airport, route and flight path tabs of the application are primarily filled with tables for uploading and inserting data into, deleting data from, and updating any data records. Data can be manually entered or uploaded via specified <a href=\"https://openflights.org/data.html\" rel=\"noreferrer noopener\">OpenFlights</a> or <a href=\"https://flightplandatabase.com/planner#\" rel=\"noreferrer noopener\">Flight Planner</a> data formats. The map tab allows routes and airports to be visualised via the Google Maps API. Selected routes from the routes tab can be loaded into the emissions tab for calculating per-person carbon emissions. Once routes are loaded in, emissions are calculated in terms of carbon dioxide. Ways to offset emissions are also given in terms of calculated environmental donation and tree equivalent values.",
    "tagName": "p"
  },
  {
    "innerHtml": "",
    "tagName": "hr"
  },
  {
    "innerHtml": "Gallery",
    "tagName": "h4"
  },
  {
    "innerHtml": "1n9pLKr03ujEeYdOHEGq41AfJQ6VdxUMuE9ayS2F8voKnwbD",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEiDlFYEy1pnZdmXzU2to9GxaNvQgqrJRILEye",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEZAQPUTgPJuCwb3tpQnxcWY1BjG95ie2q07Og",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujECePJnxk8o7PsVKEfTgGzm2AuDtHYb5qQXRvk",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujE0aEAYMdkIBbUAylCnZw1pc6VYP25jGQ3DiFq",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujENZ9AdHqnM5ZsRXho3WFtxkTjKwOlgScYzmED",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEBXSmZL05It3TPzFl4DZYnLwi6OxchS1EjqCK",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEDNewzC6crgd6y2fSJz8eU3E9CpmvxBW0tkHM",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEbskdpAHC5ATWjGH6OUuzSD9qifmJeoYkpNIL",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujE8UTJt7HZknZC72bITHseWAty9BfXdKU4mrhl",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEfcHmmi17Il1Bp64VyzWZOSEg0m9GAvdJCLKs",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEHIiTb5RPQtDW2BMaUL8JhCiYsezxTqw4bv96",
    "tagName": "figure"
  },
  {
    "innerHtml": "1n9pLKr03ujEyZjhXQOoJPS9Q2FBIXvAmcxkKCrYE8nasLjR",
    "tagName": "figure"
  }
]
